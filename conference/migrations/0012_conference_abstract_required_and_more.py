# Generated by Django 5.2.4 on 2025-07-07 10:15

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('conference', '0011_alter_pcinvite_name_alter_pcinvite_status_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='conference',
            name='abstract_required',
            field=models.BooleanField(default=True, help_text='Require abstract for submissions'),
        ),
        migrations.AddField(
            model_name='conference',
            name='allow_rebuttal_phase',
            field=models.BooleanField(default=False, help_text='Enable author rebuttal phase'),
        ),
        migrations.AddField(
            model_name='conference',
            name='allow_supplementary',
            field=models.BooleanField(default=False, help_text='Allow supplementary materials'),
        ),
        migrations.AddField(
            model_name='conference',
            name='blind_review',
            field=models.BooleanField(default=True, help_text='Enable blind review process'),
        ),
        migrations.AddField(
            model_name='conference',
            name='camera_ready_deadline',
            field=models.DateTimeField(blank=True, help_text='Camera-ready submission deadline', null=True),
        ),
        migrations.AddField(
            model_name='conference',
            name='confidence_scores_enabled',
            field=models.BooleanField(default=True, help_text='Enable reviewer confidence scores'),
        ),
        migrations.AddField(
            model_name='conference',
            name='contact_email',
            field=models.EmailField(blank=True, help_text='Main contact email for the conference', max_length=254),
        ),
        migrations.AddField(
            model_name='conference',
            name='decision_deadline',
            field=models.DateTimeField(blank=True, help_text='Final decision deadline', null=True),
        ),
        migrations.AddField(
            model_name='conference',
            name='max_paper_length',
            field=models.IntegerField(default=10, help_text='Maximum paper length in pages'),
        ),
        migrations.AddField(
            model_name='conference',
            name='multiple_authors_allowed',
            field=models.BooleanField(default=True, help_text='Allow multiple authors per paper'),
        ),
        migrations.AddField(
            model_name='conference',
            name='paper_bidding_enabled',
            field=models.BooleanField(default=False, help_text='Enable paper bidding for reviewers'),
        ),
        migrations.AddField(
            model_name='conference',
            name='rebuttal_deadline',
            field=models.DateTimeField(blank=True, help_text='Rebuttal submission deadline', null=True),
        ),
        migrations.AddField(
            model_name='conference',
            name='rebuttal_word_limit',
            field=models.IntegerField(default=500, help_text='Word limit for rebuttals'),
        ),
        migrations.AddField(
            model_name='conference',
            name='registration_fee',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Registration fee amount', max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='conference',
            name='review_deadline',
            field=models.DateTimeField(blank=True, help_text='Review submission deadline', null=True),
        ),
        migrations.AddField(
            model_name='conference',
            name='review_form_enabled',
            field=models.BooleanField(default=True, help_text='Use structured review forms'),
        ),
        migrations.AddField(
            model_name='conference',
            name='reviewers_per_paper',
            field=models.IntegerField(default=3, help_text='Number of reviewers assigned per paper'),
        ),
        migrations.AddField(
            model_name='conference',
            name='submission_deadline',
            field=models.DateTimeField(blank=True, help_text='Final submission deadline', null=True),
        ),
        migrations.AddField(
            model_name='conference',
            name='theme_domain',
            field=models.CharField(blank=True, help_text='Conference theme or domain', max_length=255),
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_type', models.CharField(choices=[('submission_confirmation', 'Submission Confirmation'), ('review_invitation', 'Review Invitation'), ('review_reminder', 'Review Reminder'), ('decision_accept', 'Decision - Accept'), ('decision_reject', 'Decision - Reject'), ('rebuttal_invitation', 'Rebuttal Invitation'), ('camera_ready_request', 'Camera Ready Request'), ('registration_confirmation', 'Registration Confirmation')], max_length=50)),
                ('subject', models.CharField(help_text='Email subject line', max_length=255)),
                ('body', models.TextField(help_text='Email body content (HTML allowed)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this template is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('conference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_templates', to='conference.conference')),
            ],
            options={
                'verbose_name': 'Email Template',
                'verbose_name_plural': 'Email Templates',
                'unique_together': {('conference', 'template_type')},
            },
        ),
    ]
